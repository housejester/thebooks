1. First step...create it:
grails create-app oasis

2. Tweak the landing page (inline styles...ick):
edit web-app/index.gsp 
edit web-app/css/main.css

3. Get it into github
Create the github repo then follow the directions to get initial commit in
git init
git add .
git commit -m 'Initial commit'
git remote add origin git@github.com:housejester/thebooks.git
git push origin master
Now we're safe.  Lets keep going.

4. Add login form to welcome page
edit web-app/index.gsp
edit web-app/css/main.css

5. Create the User domain object.  It'll just have id, email, and password for now.
grails create-domain-class com.thebooks.domain.User
edit grails-app/domain/com/thebooks/domain/User.groovy to add the fields/constraints

6. Add a user in bootstrap so we can avoid doing registration code for now.
edit grails-app/conf/BootStrap.groovy and add 
new User(email:"admin@test.com",password:"Password").save()
in the init method

7. Create the User Controller (for the login action)
grails create-controller com.thebooks.controllers.User
edit grails-app/controllers/com/thebooks/controllers/UserController.groovy to add in the login action and logic.  We'll
just show a 'login' view on login fail, and redirect to '/' on success
create grails-app/views/user/login.gsp (similar to homepage login form)
tweak web-app/index.gsp to have a session.user check.  If present, show the controller list, otherwise show the login form.

8. Create a better user homepage.
edit grails-app/controller/com/thebooks/controllers/UserController.groovy to add a home action and have the login action
 	redirect to the home action on login success
add grails-app/views/user/home.gsp and drop in the controller list section of index.gsp
take out the controller list from index.gsp and replace it with a link to the user home action.

9.  Add a logout action
edit grails-app/controller/com/thebooks/controllers/UserController.groovy to add a home action
edit grails-app/views/user/home.gsp to have a logout link

10.  Add some questions to the user home for getting them going (what accounts, just let me in, etc).  Maybe it'll be a lightbox?

11.  Add an accountList and letMeIn actions on UserController to handle the options presented by the initial questions.

12.  Tweak/cleanup all the initial css.  Pulled out a grails layout and css file and made 
	borrowed image from http://www.istockphoto.com/file_closeup/what/specific_objects/books/576520_horizontal_books_icon.php?id=576520
	need to buy it if keeping it.
	used http://www.prodraw.net/favicon/index.php to generate favicons for logos

13.	generated the grails scaffolding templates so that all the dynamic scaffold-ed views use the grails layout:
grails install-templates
edit src/templates/scaffolding/*.gsp to change the meta layout tag to point to "grails"

14.  More tweaking.  Made accountList use the main layout.

15.  Lets pull out a separate view for the "not setup yet" splash screen.  logic in the gsp is bad mm-kay.

16.  At the moment, my to-do list is:
 	a) I really want to pull up the body div into the layout.  Need to figure out how to reference the controller/action from the layout.
	b) Need to pull the logout link and the developer actions into the main layout as well.
	c) Lock the controllers down so they'll require login
	d) Um...do the grid.
	e) User registration

17.  Move the logout link into the main layout for logged in users

18.  Add a 'developer' flag onto user

19.  Move the 'developers' section into the main layout for developer users.  Would like a developer layout?	
